#!/bin/env python3
import activate_venv
import argparse
from jinja2 import Environment, FileSystemLoader
import logging
from pathlib import Path
import sys

from transcript.transcript import Transcript
from transcript.compare import Compare
from transcript.render import fixed_width_text, html_difference
from transcript.filters import strip_case, remove_punctuation, remove_numeric_commas
from transcript.transforms import numbers_to_words

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--debug', default=False, action="store_true", help="Enable debugging messages")
    parser.add_argument('--differences', default=False, action="store_true", help="Only show differences")
    parser.add_argument('--html-template', type=Path, default=None, help="HTML template file")
    parser.add_argument('--html-insert-class', default='insert', help='CSS class to use for insert text')
    parser.add_argument('--html-delete-class', default='delete', help='CSS class to use for deleted text')
    parser.add_argument('reference', type=Path, help='Reference transcript')
    parser.add_argument('hypothesis', nargs='+', type=Path, help='Hypothesis transcript(s)')

    args = parser.parse_args()

    logging.basicConfig(level=logging.DEBUG if args.debug else logging.INFO,
                        format="%(asctime)s [%(process)d:%(filename)s:%(lineno)d] [%(levelname)s] %(message)s")

    ref = Transcript.load_file(args.reference)
    ref_words = ref.get_words()
    results = {
        'title': f'Comparison against {args.reference.name}',
        'hyp': {}
    }

    for hypname in args.hypothesis:
        hyp = Transcript.load_file(hypname)    
        hyp_words = hyp.get_words()

        cmp = Compare(ref_words, hyp_words, 
                    transforms=[numbers_to_words],
                    filters=[strip_case, remove_punctuation, remove_numeric_commas])    

        results['hyp'][hyp.name] = {
            'statistics': cmp.statistics(),
            'edit_statistics': cmp.edit_statistics(),
            'edits': html_difference(cmp.edits(), original_words=True)
        }

        #print(cmp.edit_statistics())
        #print(cmp.statistics())
        #print(fixed_width_text(cmp.edits(), original_words=True))


    if args.html_template is None:
        args.html_template = Path(sys.path[0], "../templates/default_compare_template.jinja2")        
    environment = Environment(loader=FileSystemLoader(args.html_template.parent))
    template = environment.get_template(args.html_template.name)

    print(template.render(results))





if __name__ == "__main__":
    main()